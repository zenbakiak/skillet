version: '3.8'

services:
  skillet-server:
    build: .
    container_name: skillet-server
    restart: unless-stopped
    ports:
      - "${SKILLET_PORT:-8080}:8080"
    environment:
      - RUST_LOG=${RUST_LOG:-info}
      - SKILLET_HOOKS_DIR=/app/hooks
    volumes:
      - ./hooks:/app/hooks:ro
      - skillet-logs:/app/logs
      - skillet-config:/app/config
    healthcheck:
      test: ["CMD", "./health-check.sh"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '2.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:size=100M,noexec

  # Optional: nginx reverse proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: skillet-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-cache:/var/cache/nginx
    depends_on:
      - skillet-server
    profiles:
      - nginx

  # Optional: monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: skillet-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring

volumes:
  skillet-logs:
  skillet-config:
  nginx-cache:
  prometheus-data: